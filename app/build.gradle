plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "ni.jugnicaragua.coyoteapp"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "COYOTE_SERVICE", "\"http://45.58.34.229:8080\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        exclude 'META-INF/main.kotlin_module'
        exclude 'META-INF/library_release.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    buildFeatures{
        dataBinding = true
    }
    androidExtensions {
        experimental = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Versions.javaVersionConstant
        targetCompatibility Versions.javaVersionConstant
    }
    kotlinOptions {
        jvmTarget = Versions.javaVersionConstant
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
    }
}
configurations.all {
    resolutionStrategy.eachDependency { org.gradle.api.artifacts.DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }
    }
}
dependencies {
    implementation(Kotlin.kotlin)
    implementation(AndroidX.androidXcore)
    implementation(AndroidX.appcompat)
    implementation(AndroidX.constraintlayout)
    implementation(Retrofit.retrofit)
    implementation(Retrofit.retrofitConverter)
    implementation(Retrofit.okHttp)
    implementation(Google.material)
    implementation(Navigation.runtime)
    implementation(Navigation.fragment)
    implementation(Navigation.ui)
    implementation(Room.runtime)
    implementation(Room.ktx)
    implementation(Room.compiler)
    implementation(Coroutines.coroutine)
    implementation(Koin.core)
    implementation(Koin.android)
    implementation(Koin.scope)
    implementation(Koin.viewModel)
    implementation(Koin.extension)
    kapt Databinding.databinding
    implementation(Coil.coil)
    implementation(Coil.gif)
    implementation(Coil.transformation)
    implementation(Coil.transformationGpu)
    implementation(Libs.timber)
    testImplementation(Koin.test)
    testImplementation(TestLibs.junit)
    testImplementation(Room.test)
    androidTestImplementation(TestLibs.androidTest)
    androidTestImplementation(TestLibs.espresso)
}